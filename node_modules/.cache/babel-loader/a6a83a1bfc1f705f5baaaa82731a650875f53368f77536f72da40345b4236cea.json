{"ast":null,"code":"var _jsxFileName = \"D:\\\\project\\\\react-p1\\\\weather-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport WelcomeScreen from './components/WelcomeScreen';\nimport SearchBar from './components/SearchBar';\nimport CurrentWeather from './components/CurrentWeather';\nimport HourlyForecast from './components/HourlyForecast';\nimport DailyForecast from './components/DailyForecast';\nimport './styles/main.css';\nimport './styles/glassmorphism.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_KEY = 'e597c1f8e3bdd6e8f058742f2b2c9caf';\nconst getBackgroundImage = weatherCondition => {\n  const condition = weatherCondition === null || weatherCondition === void 0 ? void 0 : weatherCondition.toLowerCase();\n  if (condition.includes('clear')) return '/images/clear-sky.jpg';\n  if (condition.includes('cloud')) return '/images/cloudy.jpg';\n  if (condition.includes('rain')) return '/images/rain.jpg';\n  if (condition.includes('snow')) return '/images/snow.jpg';\n  if (condition.includes('thunder')) return '/images/thunderstorm.jpg';\n  return '/images/clear-sky.jpg';\n};\nconst WeatherApp = () => {\n  _s();\n  var _hourlyData$;\n  const [weatherData, setWeatherData] = useState(null);\n  const [hourlyData, setHourlyData] = useState([]);\n  const [dailyData, setDailyData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [backgroundImage, setBackgroundImage] = useState('/images/clear-sky.jpg');\n  const fetchWeatherData = async city => {\n    setLoading(true);\n    setError(null);\n    try {\n      // Current weather\n      const currentResponse = await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}&units=metric`);\n      setWeatherData(currentResponse.data);\n      setBackgroundImage(getBackgroundImage(currentResponse.data.weather[0].main));\n\n      // Forecast (includes hourly and daily)\n      const forecastResponse = await axios.get(`https://api.openweathermap.org/data/2.5/onecall?lat=${currentResponse.data.coord.lat}&lon=${currentResponse.data.coord.lon}&exclude=minutely,alerts&appid=${API_KEY}&units=metric`);\n      setHourlyData(forecastResponse.data.hourly);\n      setDailyData(forecastResponse.data.daily);\n    } catch (err) {\n      setError('City not found. Please try again.');\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      style: {\n        backgroundImage: `url(${backgroundImage})`\n      },\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(WelcomeScreen, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/weather\",\n          element: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"weather-container\",\n            children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n              onSearch: fetchWeatherData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"loading glass\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"loader\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Loading weather data...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 19\n            }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"error glass\",\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 27\n            }, this), weatherData && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(CurrentWeather, {\n                data: {\n                  ...weatherData,\n                  pop: (_hourlyData$ = hourlyData[0]) === null || _hourlyData$ === void 0 ? void 0 : _hourlyData$.pop\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(HourlyForecast, {\n                hourlyData: hourlyData\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(DailyForecast, {\n                dailyData: dailyData\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(WeatherApp, \"CcQyJakG7oUzCZyu4Sn4CljI4Eg=\");\n_c = WeatherApp;\nexport default WeatherApp;\nvar _c;\n$RefreshReg$(_c, \"WeatherApp\");","map":{"version":3,"names":["React","useState","useEffect","axios","BrowserRouter","Router","Routes","Route","WelcomeScreen","SearchBar","CurrentWeather","HourlyForecast","DailyForecast","jsxDEV","_jsxDEV","Fragment","_Fragment","API_KEY","getBackgroundImage","weatherCondition","condition","toLowerCase","includes","WeatherApp","_s","_hourlyData$","weatherData","setWeatherData","hourlyData","setHourlyData","dailyData","setDailyData","loading","setLoading","error","setError","backgroundImage","setBackgroundImage","fetchWeatherData","city","currentResponse","get","data","weather","main","forecastResponse","coord","lat","lon","hourly","daily","err","console","children","className","style","path","element","fileName","_jsxFileName","lineNumber","columnNumber","onSearch","pop","_c","$RefreshReg$"],"sources":["D:/project/react-p1/weather-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport WelcomeScreen from './components/WelcomeScreen';\nimport SearchBar from './components/SearchBar';\nimport CurrentWeather from './components/CurrentWeather';\nimport HourlyForecast from './components/HourlyForecast';\nimport DailyForecast from './components/DailyForecast';\nimport './styles/main.css';\nimport './styles/glassmorphism.css';\n\nconst API_KEY = 'e597c1f8e3bdd6e8f058742f2b2c9caf';\n\nconst getBackgroundImage = (weatherCondition) => {\n  const condition = weatherCondition?.toLowerCase();\n  if (condition.includes('clear')) return '/images/clear-sky.jpg';\n  if (condition.includes('cloud')) return '/images/cloudy.jpg';\n  if (condition.includes('rain')) return '/images/rain.jpg';\n  if (condition.includes('snow')) return '/images/snow.jpg';\n  if (condition.includes('thunder')) return '/images/thunderstorm.jpg';\n  return '/images/clear-sky.jpg';\n};\n\nconst WeatherApp = () => {\n  const [weatherData, setWeatherData] = useState(null);\n  const [hourlyData, setHourlyData] = useState([]);\n  const [dailyData, setDailyData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [backgroundImage, setBackgroundImage] = useState('/images/clear-sky.jpg');\n\n  const fetchWeatherData = async (city) => {\n    setLoading(true);\n    setError(null);\n    try {\n      // Current weather\n      const currentResponse = await axios.get(\n        `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}&units=metric`\n      );\n      setWeatherData(currentResponse.data);\n      setBackgroundImage(getBackgroundImage(currentResponse.data.weather[0].main));\n\n      // Forecast (includes hourly and daily)\n      const forecastResponse = await axios.get(\n        `https://api.openweathermap.org/data/2.5/onecall?lat=${currentResponse.data.coord.lat}&lon=${currentResponse.data.coord.lon}&exclude=minutely,alerts&appid=${API_KEY}&units=metric`\n      );\n      setHourlyData(forecastResponse.data.hourly);\n      setDailyData(forecastResponse.data.daily);\n    } catch (err) {\n      setError('City not found. Please try again.');\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <Router>\n      <div className=\"app\" style={{ backgroundImage: `url(${backgroundImage})` }}>\n        <Routes>\n          <Route path=\"/\" element={<WelcomeScreen />} />\n          <Route\n            path=\"/weather\"\n            element={\n              <div className=\"weather-container\">\n                <SearchBar onSearch={fetchWeatherData} />\n                {loading && (\n                  <div className=\"loading glass\">\n                    <div className=\"loader\"></div>\n                    <p>Loading weather data...</p>\n                  </div>\n                )}\n                {error && <p className=\"error glass\">{error}</p>}\n                {weatherData && (\n                  <>\n                    <CurrentWeather data={{ ...weatherData, pop: hourlyData[0]?.pop }} />\n                    <HourlyForecast hourlyData={hourlyData} />\n                    <DailyForecast dailyData={dailyData} />\n                  </>\n                )}\n              </div>\n            }\n          />\n        </Routes>\n      </div>\n    </Router>\n  );\n};\n\nexport default WeatherApp;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
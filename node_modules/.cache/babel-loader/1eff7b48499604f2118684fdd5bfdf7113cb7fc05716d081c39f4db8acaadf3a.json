{"ast":null,"code":"var _jsxFileName = \"D:\\\\project\\\\react-p1\\\\weather-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport axios from 'axios';\nimport WelcomeScreen from './components/WelcomeScreen';\nimport SearchBar from './components/SearchBar';\nimport CurrentWeather from './components/CurrentWeather';\nimport HourlyForecast from './components/HourlyForecast';\nimport DailyForecast from './components/DailyForecast';\nimport './styles/main.css';\nimport './styles/skyline.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [weatherData, setWeatherData] = useState(null);\n  const [hourlyData, setHourlyData] = useState([]);\n  const [dailyData, setDailyData] = useState([]);\n  const [error, setError] = useState(null);\n  const API_KEY = 'dc997e10673fc5c861b17abf17c8b613'; // Your new API key\n  const quotes = [\"The sky is the daily bread of the eyes.\", \"Weather is a great metaphor for life.\", \"Sunshine is the best medicine.\"];\n  const fetchWeatherData = async (city = 'London') => {\n    setError(null); // Reset error before new fetch\n    try {\n      const currentResponse = await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=${API_KEY}`);\n      const lat = currentResponse.data.coord.lat;\n      const lon = currentResponse.data.coord.lon;\n      const forecastResponse = await axios.get(`https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&exclude=minutely,alerts&units=metric&appid=${API_KEY}`);\n\n      // Ensure data compatibility with old components\n      setWeatherData({\n        ...currentResponse.data,\n        main: currentResponse.data.main,\n        weather: currentResponse.data.weather,\n        name: currentResponse.data.name\n      });\n      setHourlyData(forecastResponse.data.hourly.map(hour => ({\n        dt: hour.dt,\n        temp: hour.temp,\n        weather: hour.weather,\n        pop: hour.pop\n      })));\n      setDailyData(forecastResponse.data.daily.map(day => ({\n        dt: day.dt,\n        temp: {\n          max: day.temp.max,\n          min: day.temp.min\n        },\n        weather: day.weather,\n        humidity: day.humidity,\n        wind_speed: day.wind_speed,\n        pop: day.pop\n      })));\n      console.log('Data fetched:', {\n        current: currentResponse.data,\n        forecast: forecastResponse.data\n      });\n    } catch (err) {\n      var _err$response;\n      console.error('Fetch error:', err.message, ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data) || err);\n      setError('Failed to fetch weather data. Check API key or internet. See console for details.');\n    }\n  };\n  useEffect(() => {\n    fetchWeatherData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app skyline-theme\",\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(WelcomeScreen, {\n            quotes: quotes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/weather\",\n          element: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"weather-container\",\n            children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n              onSearch: fetchWeatherData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }, this), error ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"error\",\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 19\n            }, this) : weatherData ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(CurrentWeather, {\n                data: weatherData\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(HourlyForecast, {\n                hourlyData: hourlyData\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(DailyForecast, {\n                dailyData: dailyData\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"loading\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"loader\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Loading...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"X3PPNNC6QTJQ9fr6/P4V0lTcizk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","axios","WelcomeScreen","SearchBar","CurrentWeather","HourlyForecast","DailyForecast","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","weatherData","setWeatherData","hourlyData","setHourlyData","dailyData","setDailyData","error","setError","API_KEY","quotes","fetchWeatherData","city","currentResponse","get","lat","data","coord","lon","forecastResponse","main","weather","name","hourly","map","hour","dt","temp","pop","daily","day","max","min","humidity","wind_speed","console","log","current","forecast","err","_err$response","message","response","className","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","onSearch","_c","$RefreshReg$"],"sources":["D:/project/react-p1/weather-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport axios from 'axios';\nimport WelcomeScreen from './components/WelcomeScreen';\nimport SearchBar from './components/SearchBar';\nimport CurrentWeather from './components/CurrentWeather';\nimport HourlyForecast from './components/HourlyForecast';\nimport DailyForecast from './components/DailyForecast';\nimport './styles/main.css';\nimport './styles/skyline.css';\n\nfunction App() {\n  const [weatherData, setWeatherData] = useState(null);\n  const [hourlyData, setHourlyData] = useState([]);\n  const [dailyData, setDailyData] = useState([]);\n  const [error, setError] = useState(null);\n  const API_KEY = 'dc997e10673fc5c861b17abf17c8b613'; // Your new API key\n  const quotes = [\n    \"The sky is the daily bread of the eyes.\",\n    \"Weather is a great metaphor for life.\",\n    \"Sunshine is the best medicine.\",\n  ];\n\n  const fetchWeatherData = async (city = 'London') => {\n    setError(null); // Reset error before new fetch\n    try {\n      const currentResponse = await axios.get(\n        `https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=${API_KEY}`\n      );\n      const lat = currentResponse.data.coord.lat;\n      const lon = currentResponse.data.coord.lon;\n      const forecastResponse = await axios.get(\n        `https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&exclude=minutely,alerts&units=metric&appid=${API_KEY}`\n      );\n\n      // Ensure data compatibility with old components\n      setWeatherData({\n        ...currentResponse.data,\n        main: currentResponse.data.main,\n        weather: currentResponse.data.weather,\n        name: currentResponse.data.name,\n      });\n      setHourlyData(forecastResponse.data.hourly.map(hour => ({\n        dt: hour.dt,\n        temp: hour.temp,\n        weather: hour.weather,\n        pop: hour.pop,\n      })));\n      setDailyData(forecastResponse.data.daily.map(day => ({\n        dt: day.dt,\n        temp: { max: day.temp.max, min: day.temp.min },\n        weather: day.weather,\n        humidity: day.humidity,\n        wind_speed: day.wind_speed,\n        pop: day.pop,\n      })));\n      console.log('Data fetched:', { current: currentResponse.data, forecast: forecastResponse.data });\n    } catch (err) {\n      console.error('Fetch error:', err.message, err.response?.data || err);\n      setError('Failed to fetch weather data. Check API key or internet. See console for details.');\n    }\n  };\n\n  useEffect(() => {\n    fetchWeatherData();\n  }, []);\n\n  return (\n    <div className=\"app skyline-theme\">\n      <Router>\n        <Routes>\n          <Route path=\"/\" element={<WelcomeScreen quotes={quotes} />} />\n          <Route\n            path=\"/weather\"\n            element={\n              <div className=\"weather-container\">\n                <SearchBar onSearch={fetchWeatherData} />\n                {error ? (\n                  <div className=\"error\">{error}</div>\n                ) : weatherData ? (\n                  <>\n                    <CurrentWeather data={weatherData} />\n                    <HourlyForecast hourlyData={hourlyData} />\n                    <DailyForecast dailyData={dailyData} />\n                  </>\n                ) : (\n                  <div className=\"loading\">\n                    <div className=\"loader\"></div>\n                    <p>Loading...</p>\n                  </div>\n                )}\n              </div>\n            }\n          />\n        </Routes>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\project\\\\react-p1\\\\weather-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport WelcomeScreen from './components/WelcomeScreen';\nimport SearchBar from './components/SearchBar';\nimport CurrentWeather from './components/CurrentWeather';\nimport HourlyForecast from './components/HourlyForecast';\nimport Forecast from './components/Forecast';\nimport './styles/main.css';\nimport './styles/glassmorphism.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_KEY = 'e597c1f8e3bdd6e8f058742f2b2c9caf';\nconst WeatherApp = () => {\n  _s();\n  const [weatherData, setWeatherData] = useState(null);\n  const [hourlyData, setHourlyData] = useState([]);\n  const [dailyData, setDailyData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const fetchWeatherData = async city => {\n    setLoading(true);\n    setError(null);\n    try {\n      // Current weather\n      const currentResponse = await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}&units=metric`);\n      setWeatherData(currentResponse.data);\n\n      // Forecast (includes hourly and daily)\n      const forecastResponse = await axios.get(`https://api.openweathermap.org/data/2.5/onecall?lat=${currentResponse.data.coord.lat}&lon=${currentResponse.data.coord.lon}&exclude=minutely,alerts&appid=${API_KEY}&units=metric`);\n      setHourlyData(forecastResponse.data.hourly);\n      setDailyData(forecastResponse.data.daily);\n    } catch (err) {\n      setError('City not found. Please try again.');\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(WelcomeScreen, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/weather\",\n          element: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"weather-container\",\n            children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n              onSearch: fetchWeatherData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 17\n            }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Loading...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 29\n            }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"error\",\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 27\n            }, this), weatherData && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(CurrentWeather, {\n                data: weatherData\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(HourlyForecast, {\n                hourlyData: hourlyData\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Forecast, {\n                dailyData: dailyData\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(WeatherApp, \"89LvSRaLfZ3odngOuoYTea6EOR0=\");\n_c = WeatherApp;\nexport default WeatherApp;\nvar _c;\n$RefreshReg$(_c, \"WeatherApp\");","map":{"version":3,"names":["React","useState","useEffect","axios","BrowserRouter","Router","Routes","Route","WelcomeScreen","SearchBar","CurrentWeather","HourlyForecast","Forecast","jsxDEV","_jsxDEV","Fragment","_Fragment","API_KEY","WeatherApp","_s","weatherData","setWeatherData","hourlyData","setHourlyData","dailyData","setDailyData","loading","setLoading","error","setError","fetchWeatherData","city","currentResponse","get","data","forecastResponse","coord","lat","lon","hourly","daily","err","console","children","className","path","element","fileName","_jsxFileName","lineNumber","columnNumber","onSearch","_c","$RefreshReg$"],"sources":["D:/project/react-p1/weather-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport WelcomeScreen from './components/WelcomeScreen';\nimport SearchBar from './components/SearchBar';\nimport CurrentWeather from './components/CurrentWeather';\nimport HourlyForecast from './components/HourlyForecast';\nimport Forecast from './components/Forecast';\nimport './styles/main.css';\nimport './styles/glassmorphism.css';\n\nconst API_KEY = 'e597c1f8e3bdd6e8f058742f2b2c9caf';\n\nconst WeatherApp = () => {\n  const [weatherData, setWeatherData] = useState(null);\n  const [hourlyData, setHourlyData] = useState([]);\n  const [dailyData, setDailyData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const fetchWeatherData = async (city) => {\n    setLoading(true);\n    setError(null);\n    try {\n      // Current weather\n      const currentResponse = await axios.get(\n        `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}&units=metric`\n      );\n      setWeatherData(currentResponse.data);\n\n      // Forecast (includes hourly and daily)\n      const forecastResponse = await axios.get(\n        `https://api.openweathermap.org/data/2.5/onecall?lat=${currentResponse.data.coord.lat}&lon=${currentResponse.data.coord.lon}&exclude=minutely,alerts&appid=${API_KEY}&units=metric`\n      );\n      setHourlyData(forecastResponse.data.hourly);\n      setDailyData(forecastResponse.data.daily);\n    } catch (err) {\n      setError('City not found. Please try again.');\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <Router>\n      <div className=\"app\">\n        <Routes>\n          <Route path=\"/\" element={<WelcomeScreen />} />\n          <Route\n            path=\"/weather\"\n            element={\n              <div className=\"weather-container\">\n                <SearchBar onSearch={fetchWeatherData} />\n                {loading && <p>Loading...</p>}\n                {error && <p className=\"error\">{error}</p>}\n                {weatherData && (\n                  <>\n                    <CurrentWeather data={weatherData} />\n                    <HourlyForecast hourlyData={hourlyData} />\n                    <Forecast dailyData={dailyData} />\n                  </>\n                )}\n              </div>\n            }\n          />\n        </Routes>\n      </div>\n    </Router>\n  );\n};\n\nexport default WeatherApp;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\project\\\\react-p1\\\\weather-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport axios from 'axios';\nimport WelcomeScreen from './components/WelcomeScreen';\nimport SearchBar from './components/SearchBar';\nimport CurrentWeather from './components/CurrentWeather';\nimport HourlyForecast from './components/HourlyForecast';\nimport DailyForecast from './components/DailyForecast';\nimport './styles/main.css';\nimport './styles/skyline.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [weatherData, setWeatherData] = useState(null);\n  const [hourlyData, setHourlyData] = useState([]);\n  const [dailyData, setDailyData] = useState([]);\n  const [error, setError] = useState(null);\n  const API_KEY = 'b2df4c9821370ef04b0ccae0530b1c5c'; // Updated with your provided API key\n  const quotes = [\"The sky is the daily bread of the eyes.\", \"Weather is a great metaphor for life.\", \"Sunshine is the best medicine.\"];\n  const fetchWeatherData = async (city = 'London') => {\n    try {\n      const currentResponse = await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=${API_KEY}`);\n      const forecastResponse = await axios.get(`https://api.openweathermap.org/data/2.5/forecast?q=${city}&units=metric&appid=${API_KEY}`);\n      setWeatherData(currentResponse.data);\n      setHourlyData(forecastResponse.data.list);\n      setDailyData(forecastResponse.data.list.reduce((acc, item) => {\n        const date = new Date(item.dt * 1000).toLocaleDateString();\n        if (!acc[date]) acc[date] = item;\n        return acc;\n      }, {}).map(item => ({\n        dt: item.dt,\n        temp: {\n          max: item.main.temp_max,\n          min: item.main.temp_min\n        },\n        weather: item.weather,\n        humidity: item.main.humidity,\n        wind_speed: item.wind.speed,\n        pop: item.pop\n      })));\n      setError(null);\n    } catch (err) {\n      setError('Failed to fetch weather data. Please try again.');\n      setWeatherData(null);\n      setHourlyData([]);\n      setDailyData([]);\n    }\n  };\n  useEffect(() => {\n    fetchWeatherData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app skyline-theme\",\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(WelcomeScreen, {\n            quotes: quotes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/weather\",\n          element: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"weather-container\",\n            children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n              onSearch: fetchWeatherData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this), error ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"error\",\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 19\n            }, this) : weatherData ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(CurrentWeather, {\n                data: weatherData\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(HourlyForecast, {\n                hourlyData: hourlyData\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(DailyForecast, {\n                dailyData: dailyData\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"loading\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"loader\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Loading...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"X3PPNNC6QTJQ9fr6/P4V0lTcizk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","axios","WelcomeScreen","SearchBar","CurrentWeather","HourlyForecast","DailyForecast","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","weatherData","setWeatherData","hourlyData","setHourlyData","dailyData","setDailyData","error","setError","API_KEY","quotes","fetchWeatherData","city","currentResponse","get","forecastResponse","data","list","reduce","acc","item","date","Date","dt","toLocaleDateString","map","temp","max","main","temp_max","min","temp_min","weather","humidity","wind_speed","wind","speed","pop","err","className","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","onSearch","_c","$RefreshReg$"],"sources":["D:/project/react-p1/weather-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport axios from 'axios';\nimport WelcomeScreen from './components/WelcomeScreen';\nimport SearchBar from './components/SearchBar';\nimport CurrentWeather from './components/CurrentWeather';\nimport HourlyForecast from './components/HourlyForecast';\nimport DailyForecast from './components/DailyForecast';\nimport './styles/main.css';\nimport './styles/skyline.css';\n\nfunction App() {\n  const [weatherData, setWeatherData] = useState(null);\n  const [hourlyData, setHourlyData] = useState([]);\n  const [dailyData, setDailyData] = useState([]);\n  const [error, setError] = useState(null);\n  const API_KEY = 'b2df4c9821370ef04b0ccae0530b1c5c'; // Updated with your provided API key\n  const quotes = [\n    \"The sky is the daily bread of the eyes.\",\n    \"Weather is a great metaphor for life.\",\n    \"Sunshine is the best medicine.\",\n  ];\n\n  const fetchWeatherData = async (city = 'London') => {\n    try {\n      const currentResponse = await axios.get(\n        `https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=${API_KEY}`\n      );\n      const forecastResponse = await axios.get(\n        `https://api.openweathermap.org/data/2.5/forecast?q=${city}&units=metric&appid=${API_KEY}`\n      );\n\n      setWeatherData(currentResponse.data);\n      setHourlyData(forecastResponse.data.list);\n      setDailyData(forecastResponse.data.list.reduce((acc, item) => {\n        const date = new Date(item.dt * 1000).toLocaleDateString();\n        if (!acc[date]) acc[date] = item;\n        return acc;\n      }, {}).map(item => ({\n        dt: item.dt,\n        temp: { max: item.main.temp_max, min: item.main.temp_min },\n        weather: item.weather,\n        humidity: item.main.humidity,\n        wind_speed: item.wind.speed,\n        pop: item.pop,\n      })));\n      setError(null);\n    } catch (err) {\n      setError('Failed to fetch weather data. Please try again.');\n      setWeatherData(null);\n      setHourlyData([]);\n      setDailyData([]);\n    }\n  };\n\n  useEffect(() => {\n    fetchWeatherData();\n  }, []);\n\n  return (\n    <div className=\"app skyline-theme\">\n      <Router>\n        <Routes>\n          <Route\n            path=\"/\"\n            element={<WelcomeScreen quotes={quotes} />}\n          />\n          <Route\n            path=\"/weather\"\n            element={\n              <div className=\"weather-container\">\n                <SearchBar onSearch={fetchWeatherData} />\n                {error ? (\n                  <div className=\"error\">{error}</div>\n                ) : weatherData ? (\n                  <>\n                    <CurrentWeather data={weatherData} />\n                    <HourlyForecast hourlyData={hourlyData} />\n                    <DailyForecast dailyData={dailyData} />\n                  </>\n                ) : (\n                  <div className=\"loading\">\n                    <div className=\"loader\"></div>\n                    <p>Loading...</p>\n                  </div>\n                )}\n              </div>\n            }\n          />\n        </Routes>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
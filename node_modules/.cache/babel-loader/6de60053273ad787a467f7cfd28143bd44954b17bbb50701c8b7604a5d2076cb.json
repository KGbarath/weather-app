{"ast":null,"code":"var _jsxFileName = \"D:\\\\project\\\\react-p1\\\\weather-app\\\\src\\\\DailyForecast.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DailyForecast = ({\n  forecast\n}) => {\n  if (!forecast) return null;\n  const daily = forecast.list.filter((item, idx) => idx % 8 === 0).slice(0, 5);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-6 sm:mt-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-lg sm:text-2xl font-bold mb-4 text-heading animate-fadeIn\",\n      children: \"5-Day Forecast\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-5 gap-4\",\n      children: daily.map((item, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-3 sm:p-4 bg-card-bg backdrop-blur-lg rounded-lg text-center shadow-neumorphic animate-slideIn hover:border-2 hover:border-heading\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-primary text-xs sm:text-sm\",\n          children: new Date(item.dt * 1000).toLocaleDateString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `http://openweathermap.org/img/wn/${item.weather[0].icon}.png`,\n          alt: \"Weather Icon\",\n          className: \"mx-auto w-10 sm:w-12\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-primary text-xs sm:text-sm\",\n          children: [Math.round(item.main.temp), \"\\xB0C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"capitalize text-primary text-xs sm:text-sm\",\n          children: item.weather[0].description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n_c = DailyForecast;\nexport default DailyForecast;\nvar _c;\n$RefreshReg$(_c, \"DailyForecast\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","DailyForecast","forecast","daily","list","filter","item","idx","slice","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","Date","dt","toLocaleDateString","src","weather","icon","alt","Math","round","main","temp","description","_c","$RefreshReg$"],"sources":["D:/project/react-p1/weather-app/src/DailyForecast.jsx"],"sourcesContent":["import React from 'react';\r\n\r\nconst DailyForecast = ({ forecast }) => {\r\n  if (!forecast) return null;\r\n\r\n  const daily = forecast.list.filter((item, idx) => idx % 8 === 0).slice(0, 5);\r\n\r\n  return (\r\n    <div className=\"mt-6 sm:mt-8\">\r\n      <h3 className=\"text-lg sm:text-2xl font-bold mb-4 text-heading animate-fadeIn\">\r\n        5-Day Forecast\r\n      </h3>\r\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-5 gap-4\">\r\n        {daily.map((item, idx) => (\r\n          <div\r\n            key={idx}\r\n            className=\"p-3 sm:p-4 bg-card-bg backdrop-blur-lg rounded-lg text-center shadow-neumorphic animate-slideIn hover:border-2 hover:border-heading\"\r\n          >\r\n            <p className=\"text-primary text-xs sm:text-sm\">{new Date(item.dt * 1000).toLocaleDateString()}</p>\r\n            <img\r\n              src={`http://openweathermap.org/img/wn/${item.weather[0].icon}.png`}\r\n              alt=\"Weather Icon\"\r\n              className=\"mx-auto w-10 sm:w-12\"\r\n            />\r\n            <p className=\"text-primary text-xs sm:text-sm\">{Math.round(item.main.temp)}Â°C</p>\r\n            <p className=\"capitalize text-primary text-xs sm:text-sm\">{item.weather[0].description}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DailyForecast;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EACtC,IAAI,CAACA,QAAQ,EAAE,OAAO,IAAI;EAE1B,MAAMC,KAAK,GAAGD,QAAQ,CAACE,IAAI,CAACC,MAAM,CAAC,CAACC,IAAI,EAAEC,GAAG,KAAKA,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;EAE5E,oBACER,OAAA;IAAKS,SAAS,EAAC,cAAc;IAAAC,QAAA,gBAC3BV,OAAA;MAAIS,SAAS,EAAC,gEAAgE;MAAAC,QAAA,EAAC;IAE/E;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACLd,OAAA;MAAKS,SAAS,EAAC,sDAAsD;MAAAC,QAAA,EAClEP,KAAK,CAACY,GAAG,CAAC,CAACT,IAAI,EAAEC,GAAG,kBACnBP,OAAA;QAEES,SAAS,EAAC,qIAAqI;QAAAC,QAAA,gBAE/IV,OAAA;UAAGS,SAAS,EAAC,iCAAiC;UAAAC,QAAA,EAAE,IAAIM,IAAI,CAACV,IAAI,CAACW,EAAE,GAAG,IAAI,CAAC,CAACC,kBAAkB,CAAC;QAAC;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAClGd,OAAA;UACEmB,GAAG,EAAE,oCAAoCb,IAAI,CAACc,OAAO,CAAC,CAAC,CAAC,CAACC,IAAI,MAAO;UACpEC,GAAG,EAAC,cAAc;UAClBb,SAAS,EAAC;QAAsB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjC,CAAC,eACFd,OAAA;UAAGS,SAAS,EAAC,iCAAiC;UAAAC,QAAA,GAAEa,IAAI,CAACC,KAAK,CAAClB,IAAI,CAACmB,IAAI,CAACC,IAAI,CAAC,EAAC,OAAE;QAAA;UAAAf,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACjFd,OAAA;UAAGS,SAAS,EAAC,4CAA4C;UAAAC,QAAA,EAAEJ,IAAI,CAACc,OAAO,CAAC,CAAC,CAAC,CAACO;QAAW;UAAAhB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAVtFP,GAAG;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAWL,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACc,EAAA,GA7BI3B,aAAa;AA+BnB,eAAeA,aAAa;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
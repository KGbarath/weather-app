{"ast":null,"code":"var _jsxFileName = \"D:\\\\project\\\\react-p1\\\\weather-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport axios from 'axios';\nimport WelcomeScreen from './components/WelcomeScreen';\nimport SearchBar from './components/SearchBar';\nimport CurrentWeather from './components/CurrentWeather';\nimport HourlyForecast from './components/HourlyForecast';\nimport DailyForecast from './components/DailyForecast';\nimport './styles/main.css';\nimport './styles/skyline.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [weatherData, setWeatherData] = useState(null);\n  const [hourlyData, setHourlyData] = useState([]);\n  const [dailyData, setDailyData] = useState([]);\n  const [error, setError] = useState(null);\n  const API_KEY = 'dc997e10673fc5c861b17abf17c8b613'; // Replace with your new API key\n  const quotes = [\"The sky is the daily bread of the eyes.\", \"Weather is a great metaphor for life.\", \"Sunshine is the best medicine.\"];\n  const fetchWeatherData = async (city = 'London') => {\n    setError(null); // Clear previous errors\n    try {\n      // Fetch current weather\n      const currentResponse = await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=${API_KEY}`);\n\n      // Fetch detailed forecast using OneCall API (better for hourly/daily data)\n      const lat = currentResponse.data.coord.lat;\n      const lon = currentResponse.data.coord.lon;\n      const forecastResponse = await axios.get(`https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&exclude=minutely,alerts&units=metric&appid=${API_KEY}`);\n      setWeatherData(currentResponse.data);\n      setHourlyData(forecastResponse.data.hourly);\n      setDailyData(forecastResponse.data.daily);\n      console.log('Weather data fetched successfully:', {\n        current: currentResponse.data,\n        forecast: forecastResponse.data\n      });\n    } catch (err) {\n      var _err$response;\n      console.error('API Error:', err.message, ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data) || err);\n      setError('Failed to fetch weather data. Please check your API key or internet connection. See console for details.');\n      setWeatherData(null);\n      setHourlyData([]);\n      setDailyData([]);\n    }\n  };\n  useEffect(() => {\n    fetchWeatherData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app skyline-theme\",\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(WelcomeScreen, {\n            quotes: quotes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/weather\",\n          element: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"weather-container\",\n            children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n              onSearch: fetchWeatherData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 17\n            }, this), error ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"error\",\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 19\n            }, this) : weatherData ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(CurrentWeather, {\n                data: weatherData\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(HourlyForecast, {\n                hourlyData: hourlyData\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(DailyForecast, {\n                dailyData: dailyData\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"loading\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"loader\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Loading...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"X3PPNNC6QTJQ9fr6/P4V0lTcizk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","axios","WelcomeScreen","SearchBar","CurrentWeather","HourlyForecast","DailyForecast","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","weatherData","setWeatherData","hourlyData","setHourlyData","dailyData","setDailyData","error","setError","API_KEY","quotes","fetchWeatherData","city","currentResponse","get","lat","data","coord","lon","forecastResponse","hourly","daily","console","log","current","forecast","err","_err$response","message","response","className","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","onSearch","_c","$RefreshReg$"],"sources":["D:/project/react-p1/weather-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport axios from 'axios';\nimport WelcomeScreen from './components/WelcomeScreen';\nimport SearchBar from './components/SearchBar';\nimport CurrentWeather from './components/CurrentWeather';\nimport HourlyForecast from './components/HourlyForecast';\nimport DailyForecast from './components/DailyForecast';\nimport './styles/main.css';\nimport './styles/skyline.css';\n\nfunction App() {\n  const [weatherData, setWeatherData] = useState(null);\n  const [hourlyData, setHourlyData] = useState([]);\n  const [dailyData, setDailyData] = useState([]);\n  const [error, setError] = useState(null);\n  const API_KEY = 'dc997e10673fc5c861b17abf17c8b613'; // Replace with your new API key\n  const quotes = [\n    \"The sky is the daily bread of the eyes.\",\n    \"Weather is a great metaphor for life.\",\n    \"Sunshine is the best medicine.\",\n  ];\n\n  const fetchWeatherData = async (city = 'London') => {\n    setError(null); // Clear previous errors\n    try {\n      // Fetch current weather\n      const currentResponse = await axios.get(\n        `https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=${API_KEY}`\n      );\n      \n      // Fetch detailed forecast using OneCall API (better for hourly/daily data)\n      const lat = currentResponse.data.coord.lat;\n      const lon = currentResponse.data.coord.lon;\n      const forecastResponse = await axios.get(\n        `https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&exclude=minutely,alerts&units=metric&appid=${API_KEY}`\n      );\n\n      setWeatherData(currentResponse.data);\n      setHourlyData(forecastResponse.data.hourly);\n      setDailyData(forecastResponse.data.daily);\n      console.log('Weather data fetched successfully:', { current: currentResponse.data, forecast: forecastResponse.data });\n    } catch (err) {\n      console.error('API Error:', err.message, err.response?.data || err);\n      setError('Failed to fetch weather data. Please check your API key or internet connection. See console for details.');\n      setWeatherData(null);\n      setHourlyData([]);\n      setDailyData([]);\n    }\n  };\n\n  useEffect(() => {\n    fetchWeatherData();\n  }, []);\n\n  return (\n    <div className=\"app skyline-theme\">\n      <Router>\n        <Routes>\n          <Route\n            path=\"/\"\n            element={<WelcomeScreen quotes={quotes} />}\n          />\n          <Route\n            path=\"/weather\"\n            element={\n              <div className=\"weather-container\">\n                <SearchBar onSearch={fetchWeatherData} />\n                {error ? (\n                  <div className=\"error\">{error}</div>\n                ) : weatherData ? (\n                  <>\n                    <CurrentWeather data={weatherData} />\n                    <HourlyForecast hourlyData={hourlyData} />\n                    <DailyForecast dailyData={dailyData} />\n                  </>\n                ) : (\n                  <div className=\"loading\">\n                    <div className=\"loader\"></div>\n                    <p>Loading...</p>\n                  </div>\n                )}\n              </div>\n            }\n          />\n        </Routes>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}